    class Solution {
        public int romanToInt(String s) {
            char[] chars = s.toCharArray();

            char last = 0;

            int result = 0;

            for (int i = 0; i < chars.length; i++) {
                char curr = chars[i];

                int val = convert(curr);
                if (last == 'I' && (curr == 'V' || curr == 'X')) {
                    val = - 1 + val -1;
                }
                if (last == 'X' && (curr == 'L' || curr == 'C')) {
                    val = -10 + val -10;
                }
                if (last == 'C' && (curr == 'D' || curr == 'M')) {
                    val =  -100 + val -100;
                }
                result = result + val;
                last = curr;
            }
            return result;

        }

        int convert(char current) {
            switch (current) {
                case 'I':
                    return 1;
                case 'V':
                    return 5;
                case 'X':
                    return 10;
                case 'L':
                    return 50;
                case 'C':
                    return 100;
                case 'D':
                    return 500;
                case 'M':
                    return 1000;
            }
            return 0;
        }
    }

//runtime:4 ms
//memory:39.3 MB
